//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flight_Reservation_Client.FlightServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightServiceReference.IFlightCaseService")]
    public interface IFlightCaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/CreateReservation", ReplyAction="http://tempuri.org/IFlightCaseService/CreateReservationResponse")]
        int CreateReservation(int amount, int customerNo, string from, string destination, int maxLayovers, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/CreateReservation", ReplyAction="http://tempuri.org/IFlightCaseService/CreateReservationResponse")]
        System.Threading.Tasks.Task<int> CreateReservationAsync(int amount, int customerNo, string from, string destination, int maxLayovers, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindReservaton", ReplyAction="http://tempuri.org/IFlightCaseService/FindReservatonResponse")]
        Flight_Reservation.DataLayer.Reservation FindReservaton(int reservationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindReservaton", ReplyAction="http://tempuri.org/IFlightCaseService/FindReservatonResponse")]
        System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Reservation> FindReservatonAsync(int reservationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindReservationFlights", ReplyAction="http://tempuri.org/IFlightCaseService/FindReservationFlightsResponse")]
        Flight_Reservation.DataLayer.Flight[] FindReservationFlights(int reservationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindReservationFlights", ReplyAction="http://tempuri.org/IFlightCaseService/FindReservationFlightsResponse")]
        System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Flight[]> FindReservationFlightsAsync(int reservationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/CreateCustomer", ReplyAction="http://tempuri.org/IFlightCaseService/CreateCustomerResponse")]
        int CreateCustomer(string fName, string lName, string address, int postalCode, string phoneNo, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/CreateCustomer", ReplyAction="http://tempuri.org/IFlightCaseService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<int> CreateCustomerAsync(string fName, string lName, string address, int postalCode, string phoneNo, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindCustomer", ReplyAction="http://tempuri.org/IFlightCaseService/FindCustomerResponse")]
        Flight_Reservation.DataLayer.Customer FindCustomer(int customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindCustomer", ReplyAction="http://tempuri.org/IFlightCaseService/FindCustomerResponse")]
        System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Customer> FindCustomerAsync(int customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindFlights", ReplyAction="http://tempuri.org/IFlightCaseService/FindFlightsResponse")]
        Flight_Reservation.DataLayer.Flight[] FindFlights(string from, string destination, int maxLayovers, string date, string time, int seatAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindFlights", ReplyAction="http://tempuri.org/IFlightCaseService/FindFlightsResponse")]
        System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Flight[]> FindFlightsAsync(string from, string destination, int maxLayovers, string date, string time, int seatAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindCustomerByPhone", ReplyAction="http://tempuri.org/IFlightCaseService/FindCustomerByPhoneResponse")]
        Flight_Reservation.DataLayer.Customer FindCustomerByPhone(string phoneNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightCaseService/FindCustomerByPhone", ReplyAction="http://tempuri.org/IFlightCaseService/FindCustomerByPhoneResponse")]
        System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Customer> FindCustomerByPhoneAsync(string phoneNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightCaseServiceChannel : Flight_Reservation_Client.FlightServiceReference.IFlightCaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightCaseServiceClient : System.ServiceModel.ClientBase<Flight_Reservation_Client.FlightServiceReference.IFlightCaseService>, Flight_Reservation_Client.FlightServiceReference.IFlightCaseService {
        
        public FlightCaseServiceClient() {
        }
        
        public FlightCaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightCaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightCaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightCaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateReservation(int amount, int customerNo, string from, string destination, int maxLayovers, string date, string time) {
            return base.Channel.CreateReservation(amount, customerNo, from, destination, maxLayovers, date, time);
        }
        
        public System.Threading.Tasks.Task<int> CreateReservationAsync(int amount, int customerNo, string from, string destination, int maxLayovers, string date, string time) {
            return base.Channel.CreateReservationAsync(amount, customerNo, from, destination, maxLayovers, date, time);
        }
        
        public Flight_Reservation.DataLayer.Reservation FindReservaton(int reservationNo) {
            return base.Channel.FindReservaton(reservationNo);
        }
        
        public System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Reservation> FindReservatonAsync(int reservationNo) {
            return base.Channel.FindReservatonAsync(reservationNo);
        }
        
        public Flight_Reservation.DataLayer.Flight[] FindReservationFlights(int reservationNo) {
            return base.Channel.FindReservationFlights(reservationNo);
        }
        
        public System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Flight[]> FindReservationFlightsAsync(int reservationNo) {
            return base.Channel.FindReservationFlightsAsync(reservationNo);
        }
        
        public int CreateCustomer(string fName, string lName, string address, int postalCode, string phoneNo, string email) {
            return base.Channel.CreateCustomer(fName, lName, address, postalCode, phoneNo, email);
        }
        
        public System.Threading.Tasks.Task<int> CreateCustomerAsync(string fName, string lName, string address, int postalCode, string phoneNo, string email) {
            return base.Channel.CreateCustomerAsync(fName, lName, address, postalCode, phoneNo, email);
        }
        
        public Flight_Reservation.DataLayer.Customer FindCustomer(int customerNo) {
            return base.Channel.FindCustomer(customerNo);
        }
        
        public System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Customer> FindCustomerAsync(int customerNo) {
            return base.Channel.FindCustomerAsync(customerNo);
        }
        
        public Flight_Reservation.DataLayer.Flight[] FindFlights(string from, string destination, int maxLayovers, string date, string time, int seatAmount) {
            return base.Channel.FindFlights(from, destination, maxLayovers, date, time, seatAmount);
        }
        
        public System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Flight[]> FindFlightsAsync(string from, string destination, int maxLayovers, string date, string time, int seatAmount) {
            return base.Channel.FindFlightsAsync(from, destination, maxLayovers, date, time, seatAmount);
        }
        
        public Flight_Reservation.DataLayer.Customer FindCustomerByPhone(string phoneNo) {
            return base.Channel.FindCustomerByPhone(phoneNo);
        }
        
        public System.Threading.Tasks.Task<Flight_Reservation.DataLayer.Customer> FindCustomerByPhoneAsync(string phoneNo) {
            return base.Channel.FindCustomerByPhoneAsync(phoneNo);
        }
    }
}
