#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flight_Reservation.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dmab0913_4")]
	public partial class DBConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblAirport(TblAirport instance);
    partial void UpdateTblAirport(TblAirport instance);
    partial void DeleteTblAirport(TblAirport instance);
    partial void InsertTblSeat(TblSeat instance);
    partial void UpdateTblSeat(TblSeat instance);
    partial void DeleteTblSeat(TblSeat instance);
    partial void InsertTblCustomer(TblCustomer instance);
    partial void UpdateTblCustomer(TblCustomer instance);
    partial void DeleteTblCustomer(TblCustomer instance);
    partial void InsertTblFlight(TblFlight instance);
    partial void UpdateTblFlight(TblFlight instance);
    partial void DeleteTblFlight(TblFlight instance);
    partial void InsertTblPartReservation(TblPartReservation instance);
    partial void UpdateTblPartReservation(TblPartReservation instance);
    partial void DeleteTblPartReservation(TblPartReservation instance);
    partial void InsertTblReservation(TblReservation instance);
    partial void UpdateTblReservation(TblReservation instance);
    partial void DeleteTblReservation(TblReservation instance);
    partial void InsertTblRoute(TblRoute instance);
    partial void UpdateTblRoute(TblRoute instance);
    partial void DeleteTblRoute(TblRoute instance);
    #endregion
		
		public DBConnectionDataContext() : 
				base(global::Flight_Reservation.Properties.Settings.Default.dmab0913_4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblAirport> TblAirports
		{
			get
			{
				return this.GetTable<TblAirport>();
			}
		}
		
		public System.Data.Linq.Table<TblSeat> TblSeats
		{
			get
			{
				return this.GetTable<TblSeat>();
			}
		}
		
		public System.Data.Linq.Table<TblCustomer> TblCustomers
		{
			get
			{
				return this.GetTable<TblCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TblFlight> TblFlights
		{
			get
			{
				return this.GetTable<TblFlight>();
			}
		}
		
		public System.Data.Linq.Table<TblPartReservation> TblPartReservations
		{
			get
			{
				return this.GetTable<TblPartReservation>();
			}
		}
		
		public System.Data.Linq.Table<TblReservation> TblReservations
		{
			get
			{
				return this.GetTable<TblReservation>();
			}
		}
		
		public System.Data.Linq.Table<TblRoute> TblRoutes
		{
			get
			{
				return this.GetTable<TblRoute>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Airport")]
	public partial class TblAirport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AirportCode;
		
		private string _Name;
		
		private string _City;
		
		private string _Country;
		
		private EntitySet<TblRoute> _Routes;
		
		private EntitySet<TblRoute> _TblRoutes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAirportCodeChanging(string value);
    partial void OnAirportCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public TblAirport()
		{
			this._Routes = new EntitySet<TblRoute>(new Action<TblRoute>(this.attach_Routes), new Action<TblRoute>(this.detach_Routes));
			this._TblRoutes = new EntitySet<TblRoute>(new Action<TblRoute>(this.attach_TblRoutes), new Action<TblRoute>(this.detach_TblRoutes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AirportCode
		{
			get
			{
				return this._AirportCode;
			}
			set
			{
				if ((this._AirportCode != value))
				{
					this.OnAirportCodeChanging(value);
					this.SendPropertyChanging();
					this._AirportCode = value;
					this.SendPropertyChanged("AirportCode");
					this.OnAirportCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Route", Storage="_Routes", ThisKey="AirportCode", OtherKey="EndAirport")]
		public EntitySet<TblRoute> Routes
		{
			get
			{
				return this._Routes;
			}
			set
			{
				this._Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Route1", Storage="_TblRoutes", ThisKey="AirportCode", OtherKey="StartAirport")]
		public EntitySet<TblRoute> TblRoutes
		{
			get
			{
				return this._TblRoutes;
			}
			set
			{
				this._TblRoutes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Routes(TblRoute entity)
		{
			this.SendPropertyChanging();
			entity.Airport = this;
		}
		
		private void detach_Routes(TblRoute entity)
		{
			this.SendPropertyChanging();
			entity.Airport = null;
		}
		
		private void attach_TblRoutes(TblRoute entity)
		{
			this.SendPropertyChanging();
			entity.TblAirport = this;
		}
		
		private void detach_TblRoutes(TblRoute entity)
		{
			this.SendPropertyChanging();
			entity.TblAirport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seat")]
	public partial class TblSeat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FlightNo;
		
		private bool _Reserved;
		
		private int _SeatNo;
		
		private int _RowNo;
		
		private EntityRef<TblFlight> _TblFlight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlightNoChanging(int value);
    partial void OnFlightNoChanged();
    partial void OnReservedChanging(bool value);
    partial void OnReservedChanged();
    partial void OnSeatNoChanging(int value);
    partial void OnSeatNoChanged();
    partial void OnRowNoChanging(int value);
    partial void OnRowNoChanged();
    #endregion
		
		public TblSeat()
		{
			this._TblFlight = default(EntityRef<TblFlight>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					if (this._TblFlight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reserved", DbType="Bit NOT NULL")]
		public bool Reserved
		{
			get
			{
				return this._Reserved;
			}
			set
			{
				if ((this._Reserved != value))
				{
					this.OnReservedChanging(value);
					this.SendPropertyChanging();
					this._Reserved = value;
					this.SendPropertyChanged("Reserved");
					this.OnReservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SeatNo
		{
			get
			{
				return this._SeatNo;
			}
			set
			{
				if ((this._SeatNo != value))
				{
					this.OnSeatNoChanging(value);
					this.SendPropertyChanging();
					this._SeatNo = value;
					this.SendPropertyChanged("SeatNo");
					this.OnSeatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this.OnRowNoChanging(value);
					this.SendPropertyChanging();
					this._RowNo = value;
					this.SendPropertyChanged("RowNo");
					this.OnRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Seat", Storage="_TblFlight", ThisKey="FlightNo", OtherKey="FlightNo", IsForeignKey=true)]
		public TblFlight TblFlight
		{
			get
			{
				return this._TblFlight.Entity;
			}
			set
			{
				TblFlight previousValue = this._TblFlight.Entity;
				if (((previousValue != value) 
							|| (this._TblFlight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblFlight.Entity = null;
						previousValue.TblSeats.Remove(this);
					}
					this._TblFlight.Entity = value;
					if ((value != null))
					{
						value.TblSeats.Add(this);
						this._FlightNo = value.FlightNo;
					}
					else
					{
						this._FlightNo = default(int);
					}
					this.SendPropertyChanged("TblFlight");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class TblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FName;
		
		private string _LName;
		
		private string _Address;
		
		private int _PostalCode;
		
		private string _PhoneNo;
		
		private string _Email;
		
		private int _CustomerNo;
		
		private EntitySet<TblReservation> _TblReservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(int value);
    partial void OnPostalCodeChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCustomerNoChanging(int value);
    partial void OnCustomerNoChanged();
    #endregion
		
		public TblCustomer()
		{
			this._TblReservations = new EntitySet<TblReservation>(new Action<TblReservation>(this.attach_TblReservations), new Action<TblReservation>(this.detach_TblReservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="Int NOT NULL")]
		public int PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_TblReservations", ThisKey="CustomerNo", OtherKey="CustomerNo")]
		public EntitySet<TblReservation> TblReservations
		{
			get
			{
				return this._TblReservations;
			}
			set
			{
				this._TblReservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblReservations(TblReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblCustomer = this;
		}
		
		private void detach_TblReservations(TblReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight")]
	public partial class TblFlight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FlightNo;
		
		private System.TimeSpan _DepartureTime;
		
		private System.TimeSpan _ArrivalTime;
		
		private System.DateTime _DepartureDate;
		
		private System.DateTime _ArrivalDate;
		
		private int _TotalSeats;
		
		private int _ReservedSeats;
		
		private int _RouteNo;
		
		private EntitySet<TblSeat> _TblSeats;
		
		private EntitySet<TblPartReservation> _TblPartReservations;
		
		private EntityRef<TblRoute> _TblRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlightNoChanging(int value);
    partial void OnFlightNoChanged();
    partial void OnDepartureTimeChanging(System.TimeSpan value);
    partial void OnDepartureTimeChanged();
    partial void OnArrivalTimeChanging(System.TimeSpan value);
    partial void OnArrivalTimeChanged();
    partial void OnDepartureDateChanging(System.DateTime value);
    partial void OnDepartureDateChanged();
    partial void OnArrivalDateChanging(System.DateTime value);
    partial void OnArrivalDateChanged();
    partial void OnTotalSeatsChanging(int value);
    partial void OnTotalSeatsChanged();
    partial void OnReservedSeatsChanging(int value);
    partial void OnReservedSeatsChanged();
    partial void OnRouteNoChanging(int value);
    partial void OnRouteNoChanged();
    #endregion
		
		public TblFlight()
		{
			this._TblSeats = new EntitySet<TblSeat>(new Action<TblSeat>(this.attach_TblSeats), new Action<TblSeat>(this.detach_TblSeats));
			this._TblPartReservations = new EntitySet<TblPartReservation>(new Action<TblPartReservation>(this.attach_TblPartReservations), new Action<TblPartReservation>(this.detach_TblPartReservations));
			this._TblRoute = default(EntityRef<TblRoute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureTime", DbType="Time NOT NULL")]
		public System.TimeSpan DepartureTime
		{
			get
			{
				return this._DepartureTime;
			}
			set
			{
				if ((this._DepartureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="Time NOT NULL")]
		public System.TimeSpan ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this.OnArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTime = value;
					this.SendPropertyChanged("ArrivalTime");
					this.OnArrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureDate", DbType="Date NOT NULL")]
		public System.DateTime DepartureDate
		{
			get
			{
				return this._DepartureDate;
			}
			set
			{
				if ((this._DepartureDate != value))
				{
					this.OnDepartureDateChanging(value);
					this.SendPropertyChanging();
					this._DepartureDate = value;
					this.SendPropertyChanged("DepartureDate");
					this.OnDepartureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDate", DbType="Date NOT NULL")]
		public System.DateTime ArrivalDate
		{
			get
			{
				return this._ArrivalDate;
			}
			set
			{
				if ((this._ArrivalDate != value))
				{
					this.OnArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDate = value;
					this.SendPropertyChanged("ArrivalDate");
					this.OnArrivalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSeats", DbType="Int NOT NULL")]
		public int TotalSeats
		{
			get
			{
				return this._TotalSeats;
			}
			set
			{
				if ((this._TotalSeats != value))
				{
					this.OnTotalSeatsChanging(value);
					this.SendPropertyChanging();
					this._TotalSeats = value;
					this.SendPropertyChanged("TotalSeats");
					this.OnTotalSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedSeats", DbType="Int NOT NULL")]
		public int ReservedSeats
		{
			get
			{
				return this._ReservedSeats;
			}
			set
			{
				if ((this._ReservedSeats != value))
				{
					this.OnReservedSeatsChanging(value);
					this.SendPropertyChanging();
					this._ReservedSeats = value;
					this.SendPropertyChanged("ReservedSeats");
					this.OnReservedSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", DbType="Int NOT NULL")]
		public int RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					if (this._TblRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Seat", Storage="_TblSeats", ThisKey="FlightNo", OtherKey="FlightNo")]
		public EntitySet<TblSeat> TblSeats
		{
			get
			{
				return this._TblSeats;
			}
			set
			{
				this._TblSeats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_PartReservation", Storage="_TblPartReservations", ThisKey="FlightNo", OtherKey="FlightNo")]
		public EntitySet<TblPartReservation> TblPartReservations
		{
			get
			{
				return this._TblPartReservations;
			}
			set
			{
				this._TblPartReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_Flight", Storage="_TblRoute", ThisKey="RouteNo", OtherKey="RouteNo", IsForeignKey=true)]
		public TblRoute TblRoute
		{
			get
			{
				return this._TblRoute.Entity;
			}
			set
			{
				TblRoute previousValue = this._TblRoute.Entity;
				if (((previousValue != value) 
							|| (this._TblRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRoute.Entity = null;
						previousValue.TblFlights.Remove(this);
					}
					this._TblRoute.Entity = value;
					if ((value != null))
					{
						value.TblFlights.Add(this);
						this._RouteNo = value.RouteNo;
					}
					else
					{
						this._RouteNo = default(int);
					}
					this.SendPropertyChanged("TblRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblSeats(TblSeat entity)
		{
			this.SendPropertyChanging();
			entity.TblFlight = this;
		}
		
		private void detach_TblSeats(TblSeat entity)
		{
			this.SendPropertyChanging();
			entity.TblFlight = null;
		}
		
		private void attach_TblPartReservations(TblPartReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblFlight = this;
		}
		
		private void detach_TblPartReservations(TblPartReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblFlight = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartReservation")]
	public partial class TblPartReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FlightNo;
		
		private int _ReservationNo;
		
		private EntityRef<TblFlight> _TblFlight;
		
		private EntityRef<TblReservation> _TblReservation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlightNoChanging(int value);
    partial void OnFlightNoChanged();
    partial void OnReservationNoChanging(int value);
    partial void OnReservationNoChanged();
    #endregion
		
		public TblPartReservation()
		{
			this._TblFlight = default(EntityRef<TblFlight>);
			this._TblReservation = default(EntityRef<TblReservation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					if (this._TblFlight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReservationNo
		{
			get
			{
				return this._ReservationNo;
			}
			set
			{
				if ((this._ReservationNo != value))
				{
					if (this._TblReservation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReservationNoChanging(value);
					this.SendPropertyChanging();
					this._ReservationNo = value;
					this.SendPropertyChanged("ReservationNo");
					this.OnReservationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_PartReservation", Storage="_TblFlight", ThisKey="FlightNo", OtherKey="FlightNo", IsForeignKey=true)]
		public TblFlight TblFlight
		{
			get
			{
				return this._TblFlight.Entity;
			}
			set
			{
				TblFlight previousValue = this._TblFlight.Entity;
				if (((previousValue != value) 
							|| (this._TblFlight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblFlight.Entity = null;
						previousValue.TblPartReservations.Remove(this);
					}
					this._TblFlight.Entity = value;
					if ((value != null))
					{
						value.TblPartReservations.Add(this);
						this._FlightNo = value.FlightNo;
					}
					else
					{
						this._FlightNo = default(int);
					}
					this.SendPropertyChanged("TblFlight");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_PartReservation", Storage="_TblReservation", ThisKey="ReservationNo", OtherKey="ReservationNo", IsForeignKey=true)]
		public TblReservation TblReservation
		{
			get
			{
				return this._TblReservation.Entity;
			}
			set
			{
				TblReservation previousValue = this._TblReservation.Entity;
				if (((previousValue != value) 
							|| (this._TblReservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblReservation.Entity = null;
						previousValue.TblPartReservations.Remove(this);
					}
					this._TblReservation.Entity = value;
					if ((value != null))
					{
						value.TblPartReservations.Add(this);
						this._ReservationNo = value.ReservationNo;
					}
					else
					{
						this._ReservationNo = default(int);
					}
					this.SendPropertyChanged("TblReservation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
	public partial class TblReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationNo;
		
		private double _TotalPrice;
		
		private int _CustomerNo;
		
		private int _Amount;
		
		private EntitySet<TblPartReservation> _TblPartReservations;
		
		private EntityRef<TblCustomer> _TblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationNoChanging(int value);
    partial void OnReservationNoChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnCustomerNoChanging(int value);
    partial void OnCustomerNoChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    #endregion
		
		public TblReservation()
		{
			this._TblPartReservations = new EntitySet<TblPartReservation>(new Action<TblPartReservation>(this.attach_TblPartReservations), new Action<TblPartReservation>(this.detach_TblPartReservations));
			this._TblCustomer = default(EntityRef<TblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReservationNo
		{
			get
			{
				return this._ReservationNo;
			}
			set
			{
				if ((this._ReservationNo != value))
				{
					this.OnReservationNoChanging(value);
					this.SendPropertyChanging();
					this._ReservationNo = value;
					this.SendPropertyChanged("ReservationNo");
					this.OnReservationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="Int NOT NULL")]
		public int CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					if (this._TblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_PartReservation", Storage="_TblPartReservations", ThisKey="ReservationNo", OtherKey="ReservationNo")]
		public EntitySet<TblPartReservation> TblPartReservations
		{
			get
			{
				return this._TblPartReservations;
			}
			set
			{
				this._TblPartReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_TblCustomer", ThisKey="CustomerNo", OtherKey="CustomerNo", IsForeignKey=true)]
		public TblCustomer TblCustomer
		{
			get
			{
				return this._TblCustomer.Entity;
			}
			set
			{
				TblCustomer previousValue = this._TblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCustomer.Entity = null;
						previousValue.TblReservations.Remove(this);
					}
					this._TblCustomer.Entity = value;
					if ((value != null))
					{
						value.TblReservations.Add(this);
						this._CustomerNo = value.CustomerNo;
					}
					else
					{
						this._CustomerNo = default(int);
					}
					this.SendPropertyChanged("TblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPartReservations(TblPartReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblReservation = this;
		}
		
		private void detach_TblPartReservations(TblPartReservation entity)
		{
			this.SendPropertyChanging();
			entity.TblReservation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Route")]
	public partial class TblRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StartAirport;
		
		private string _EndAirport;
		
		private int _RouteNo;
		
		private double _Price;
		
		private EntitySet<TblFlight> _TblFlights;
		
		private EntityRef<TblAirport> _Airport;
		
		private EntityRef<TblAirport> _TblAirport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStartAirportChanging(string value);
    partial void OnStartAirportChanged();
    partial void OnEndAirportChanging(string value);
    partial void OnEndAirportChanged();
    partial void OnRouteNoChanging(int value);
    partial void OnRouteNoChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    #endregion
		
		public TblRoute()
		{
			this._TblFlights = new EntitySet<TblFlight>(new Action<TblFlight>(this.attach_TblFlights), new Action<TblFlight>(this.detach_TblFlights));
			this._Airport = default(EntityRef<TblAirport>);
			this._TblAirport = default(EntityRef<TblAirport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAirport", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StartAirport
		{
			get
			{
				return this._StartAirport;
			}
			set
			{
				if ((this._StartAirport != value))
				{
					if (this._TblAirport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartAirportChanging(value);
					this.SendPropertyChanging();
					this._StartAirport = value;
					this.SendPropertyChanged("StartAirport");
					this.OnStartAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAirport", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EndAirport
		{
			get
			{
				return this._EndAirport;
			}
			set
			{
				if ((this._EndAirport != value))
				{
					if (this._Airport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndAirportChanging(value);
					this.SendPropertyChanging();
					this._EndAirport = value;
					this.SendPropertyChanged("EndAirport");
					this.OnEndAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RouteNo
		{
			get
			{
				return this._RouteNo;
			}
			set
			{
				if ((this._RouteNo != value))
				{
					this.OnRouteNoChanging(value);
					this.SendPropertyChanging();
					this._RouteNo = value;
					this.SendPropertyChanged("RouteNo");
					this.OnRouteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_Flight", Storage="_TblFlights", ThisKey="RouteNo", OtherKey="RouteNo")]
		public EntitySet<TblFlight> TblFlights
		{
			get
			{
				return this._TblFlights;
			}
			set
			{
				this._TblFlights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Route", Storage="_Airport", ThisKey="EndAirport", OtherKey="AirportCode", IsForeignKey=true)]
		public TblAirport Airport
		{
			get
			{
				return this._Airport.Entity;
			}
			set
			{
				TblAirport previousValue = this._Airport.Entity;
				if (((previousValue != value) 
							|| (this._Airport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Airport.Entity = null;
						previousValue.Routes.Remove(this);
					}
					this._Airport.Entity = value;
					if ((value != null))
					{
						value.Routes.Add(this);
						this._EndAirport = value.AirportCode;
					}
					else
					{
						this._EndAirport = default(string);
					}
					this.SendPropertyChanged("Airport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Route1", Storage="_TblAirport", ThisKey="StartAirport", OtherKey="AirportCode", IsForeignKey=true)]
		public TblAirport TblAirport
		{
			get
			{
				return this._TblAirport.Entity;
			}
			set
			{
				TblAirport previousValue = this._TblAirport.Entity;
				if (((previousValue != value) 
							|| (this._TblAirport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblAirport.Entity = null;
						previousValue.TblRoutes.Remove(this);
					}
					this._TblAirport.Entity = value;
					if ((value != null))
					{
						value.TblRoutes.Add(this);
						this._StartAirport = value.AirportCode;
					}
					else
					{
						this._StartAirport = default(string);
					}
					this.SendPropertyChanged("TblAirport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblFlights(TblFlight entity)
		{
			this.SendPropertyChanging();
			entity.TblRoute = this;
		}
		
		private void detach_TblFlights(TblFlight entity)
		{
			this.SendPropertyChanging();
			entity.TblRoute = null;
		}
	}
}
#pragma warning restore 1591
